{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stinenorklitlonborg/Desktop/projekt/brugerinddragelse/components/AddRating.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from \"firebase\";\nimport { Card } from \"react-native-paper\";\nimport SignUpForm from \"./SignUpForm\";\nimport LoginForm from \"./LoginForm\";\n\nvar AddRating = function AddRating(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  if (!firebase.auth().currentUser) {\n    var _useState = useState({\n      loggedIn: false\n    }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n    function onAuthStateChange(callback) {\n      return firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          callback({\n            loggedIn: true,\n            user: user\n          });\n        } else {\n          callback({\n            loggedIn: false\n          });\n        }\n      });\n    }\n\n    useEffect(function () {\n      var unsubscribe = onAuthStateChange(setUser);\n      return function () {\n        unsubscribe();\n      };\n    }, []);\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/welcomePic.jpeg\"),\n      style: styles.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.paragraph,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Opret eller Login for at dele hvor du har spist for nylig!\"), React.createElement(Card, {\n      style: {\n        padding: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, React.createElement(SignUpForm, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    })), React.createElement(Card, {\n      style: {\n        padding: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, React.createElement(LoginForm, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: styles.paragraph2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Jeg h\\xE5ber virkelig dette kan hj\\xE6lpe bare en smule!\"));\n  } else {\n    var initialState = {\n      \"Noget ekstra du vil dele?\": ''\n    };\n\n    var _useState3 = useState(initialState),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newRating = _useState4[0],\n        setNewRating = _useState4[1];\n\n    var isEditRating = route.name === \"Edit Rating\";\n    useEffect(function () {\n      if (isEditRating) {\n        var rating = route.params.rating[1];\n        setNewRating(rating);\n      }\n\n      return function () {\n        setNewRating(initialState);\n      };\n    }, []);\n\n    var changeTextInput = function changeTextInput(name, event) {\n      setNewRating(_objectSpread(_objectSpread({}, newRating), {}, _defineProperty({}, name, event)));\n    };\n\n    var handleSave = function handleSave() {\n      var initialState = newRating.initialState;\n\n      if (Sted.length === 0 || Maden.length === 0 || Atmosfaeren.length === 0 || Service.length === 0 || ValueForMoney.length === 0) {\n        return Alert.alert('Et af felterne er tomme');\n      }\n\n      if (isEditRating) {\n        var id = route.params.rating[0];\n\n        try {\n          firebase.database().ref(\"/Ratings/\" + id).update({\n            Sted: Sted,\n            Maden: Maden,\n            Atmosfaeren: Atmosfaeren,\n            Service: Service,\n            ValueForMoney: ValueForMoney,\n            Eventuelt: Eventuelt\n          });\n          Alert.alert(\"Din info er nu opdateret\");\n          var raing = [id, newRating];\n          navigation.navigate(\"Ratings Details\", {\n            raing: raing\n          });\n        } catch (error) {\n          console.log(\"Error: \" + error.message);\n        }\n      } else {\n        try {\n          firebase.database().ref('/Ratings/').push({\n            Sted: Sted,\n            Maden: Maden,\n            Atmosfaeren: Atmosfaeren,\n            Service: Service,\n            ValueForMoney: ValueForMoney,\n            Eventuelt: Eventuelt\n          });\n          Alert.alert(\"Saved\");\n          setNewRating(initialState);\n        } catch (error) {\n          console.log(\"Error: \" + error.message);\n        }\n      }\n    };\n\n    return React.createElement(SafeAreaView, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, Object.keys(initialState).map(function (key, index) {\n      return React.createElement(View, {\n        style: styles.row,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 37\n        }\n      }, key), React.createElement(TextInput, {\n        value: newRating[key],\n        onChangeText: function onChangeText(event) {\n          return changeTextInput(key, event);\n        },\n        style: styles.input,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 37\n        }\n      }));\n    }), React.createElement(Button, {\n      title: isEditRating ? \"Gem ændringer\" : \"Tilføj anmeldelse\",\n      onPress: function onPress() {\n        return handleSave();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    })));\n  }\n};\n\nexport default AddRating;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: '5%',\n    backgroundColor: '#FFFFFF',\n    padding: 8\n  },\n  row: {\n    flexDirection: 'row',\n    height: 30,\n    margin: 10\n  },\n  label: {\n    fontWeight: 'bold',\n    width: 100\n  },\n  input: {\n    borderWidth: 1,\n    padding: 5,\n    flex: 1\n  },\n  image: {\n    marginHorizontal: \"10%\",\n    marginTop: \"5%\",\n    width: \"80%\",\n    height: \"25%\"\n  },\n  paragraph: {\n    margin: '5%',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  paragraph2: {\n    marginTop: '50%',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/stinenorklitlonborg/Desktop/projekt/brugerinddragelse/components/AddRating.js"],"names":["React","useState","useEffect","firebase","Card","SignUpForm","LoginForm","AddRating","navigation","route","auth","currentUser","loggedIn","user","setUser","onAuthStateChange","callback","onAuthStateChanged","unsubscribe","require","styles","image","paragraph","padding","paragraph2","initialState","newRating","setNewRating","isEditRating","name","rating","params","changeTextInput","event","handleSave","Sted","length","Maden","Atmosfaeren","Service","ValueForMoney","Alert","alert","id","database","ref","update","Eventuelt","raing","navigate","error","console","log","message","push","container","Object","keys","map","key","index","row","label","input","StyleSheet","create","flex","justifyContent","paddingTop","backgroundColor","flexDirection","height","margin","fontWeight","width","borderWidth","marginHorizontal","marginTop","fontSize","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport {\n    Button,\n    Text,\n    View,\n    TextInput,\n    Alert,\n    StyleSheet,\n    SafeAreaView,\n    ScrollView, Image,\n} from 'react-native';\nimport firebase from \"firebase\";\nimport {Card} from \"react-native-paper\";\nimport SignUpForm from \"./SignUpForm\";\nimport LoginForm from \"./LoginForm\";\n\nconst AddRating = ({navigation, route}) => {\n\n\n    if (!firebase.auth().currentUser) {\n        //Her oprettes bruger state variblen\n        const [user, setUser] = useState({loggedIn: false});\n\n        //onAuthstatechanged er en prædefineret metode, forsynet af firebase, som konstant observerer brugerens status (logget ind vs logget ud)\n        //Pba. brugerens status foretages et callback i form af setUSer metoden, som håndterer user-state variablens status.\n        function onAuthStateChange(callback) {\n            return firebase.auth().onAuthStateChanged(user => {\n                if (user) {\n                    callback({loggedIn: true, user: user});\n                } else {\n                    callback({loggedIn: false});\n                }\n            });\n        }\n\n        //Heri aktiverer vi vores listener i form af onAuthStateChanged, så vi dynamisk observerer om brugeren er aktiv eller ej.\n        useEffect(() => {\n            const unsubscribe = onAuthStateChange(setUser);\n            return () => {\n                unsubscribe();\n            };\n        }, []);\n\n        return (\n            <ScrollView>\n                <Image\n                    source={require('../assets/welcomePic.jpeg')}\n                    style={styles.image}/>\n                <Text style={styles.paragraph}>\n                    Opret eller Login for at dele hvor du har spist for nylig!\n                </Text>\n                <Card style={{padding:20}}>\n                    <SignUpForm />\n                </Card>\n\n                <Card style={{padding:20}}>\n                    <LoginForm />\n                </Card>\n                <Text style={styles.paragraph2}>\n                    Jeg håber virkelig dette kan hjælpe bare en smule!\n                </Text>\n            </ScrollView>\n        )\n    } else {\n        const initialState = {\"Noget ekstra du vil dele?\": ''}\n\n        const [newRating, setNewRating] = useState(initialState);\n\n        /*Returnerer true, hvis vi er på edit Rating*/\n        const isEditRating = route.name === \"Edit Rating\";\n\n        useEffect(() => {\n            if (isEditRating) {\n                const rating = route.params.rating[1];\n                setNewRating(rating)\n            }\n            //Fjern data, når vi går væk fra screenen\n            return () => {\n                setNewRating(initialState)\n            };\n        }, []);\n\n        const changeTextInput = (name, event) => {\n            setNewRating({...newRating, [name]: event});\n        }\n\n        const handleSave = () => {\n            const {initialState} = newRating;\n\n            if (Sted.length === 0 || Maden.length === 0 || Atmosfaeren.length === 0 || Service.length === 0 || ValueForMoney.length === 0) {\n                return Alert.alert('Et af felterne er tomme');\n            }\n\n            if (isEditRating) {\n                const id = route.params.rating[0];\n                try {\n                    firebase\n                        .database()\n                        .ref(`/Ratings/${id}`)\n                        // Vi bruger update, så kun de felter vi angiver, bliver ændret\n                        .update({Sted, Maden, Atmosfaeren, Service, ValueForMoney, Eventuelt});\n                    // Når bilen er ændret, går vi tilbage.\n                    Alert.alert(\"Din info er nu opdateret\");\n                    const raing = [id, newRating]\n                    navigation.navigate(\"Ratings Details\", {raing});\n                } catch (error) {\n                    console.log(`Error: ${error.message}`);\n                }\n\n            } else {\n                try {\n                    firebase\n                        .database()\n                        .ref('/Ratings/')\n                        .push({Sted, Maden, Atmosfaeren, Service, ValueForMoney, Eventuelt});\n                    Alert.alert(`Saved`);\n                    setNewRating(initialState)\n                } catch (error) {\n                    console.log(`Error: ${error.message}`);\n                }\n            }\n        }\n\n        return (\n            <SafeAreaView style={styles.container}>\n                <ScrollView>\n                    {\n                        Object.keys(initialState).map((key, index) => {\n                            return (\n                                <View style={styles.row} key={index}>\n                                    <Text style={styles.label}>{key}</Text>\n                                    <TextInput\n                                        value={newRating[key]}\n                                        onChangeText={(event) => changeTextInput(key, event)}\n                                        style={styles.input}\n                                    />\n                                </View>\n                            )\n                        })\n                    }\n                    {/*Hvis vi er inde på edit Rating, vis save changes i stedet for add Rating*/}\n                    <Button title={isEditRating ? \"Gem ændringer\" : \"Tilføj anmeldelse\"} onPress={() => handleSave()}/>\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n}\n\nexport default AddRating;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        paddingTop: '5%',\n        backgroundColor: '#FFFFFF',\n        padding: 8,\n    },\n    row: {\n        flexDirection: 'row',\n        height: 30,\n        margin: 10,\n    },\n    label: {\n        fontWeight: 'bold',\n        width: 100\n    },\n    input: {\n        borderWidth: 1,\n        padding:5,\n        flex: 1\n    },\n    image: {\n        marginHorizontal: \"10%\",\n        marginTop: \"5%\",\n        width: \"80%\",\n        height: \"25%\",\n    },\n    paragraph: {\n        margin: '5%',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    paragraph2: {\n        marginTop: '50%',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n});"]},"metadata":{},"sourceType":"module"}