{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/kasperronbog/WebstormProjects/brugerinddragelse/components/LoginForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase';\n\nfunction LoginForm() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isCompleted = _useState6[0],\n      setIsCompleted = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  var renderButton = function renderButton() {\n    return React.createElement(Button, {\n      onSubmit: function onSubmit() {\n        return handleSubmit();\n      },\n      title: \"Login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n  };\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password).then(function (data) {}));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage(_context.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1\n    },\n    placeholder: \"email\",\n    value: email,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    style: styles.inputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"password\",\n    value: password,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: true,\n    style: styles.inputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), errorMessage && React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Error: \", errorMessage), renderButton());\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: \"bold\",\n    fontSize: 40\n  },\n  inputField: {\n    borderWidth: 1,\n    margin: 10,\n    padding: 10\n  }\n});\nexport default LoginForm;","map":{"version":3,"sources":["/Users/kasperronbog/WebstormProjects/brugerinddragelse/components/LoginForm.js"],"names":["React","useState","firebase","LoginForm","email","setEmail","password","setPassword","isCompleted","setIsCompleted","errorMessage","setErrorMessage","renderButton","handleSubmit","auth","signInWithEmailAndPassword","then","data","message","styles","header","borderWidth","inputField","error","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","margin","padding"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Button,Text,\n    View,\n    TextInput,\n    ActivityIndicator,\n    StyleSheet,\n} from 'react-native';\nimport firebase from 'firebase';\n\nfunction LoginForm() {\n    //Instantiering af state-variabler, der skal benyttes i SignUpForm\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [isCompleted, setIsCompleted] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    //Her defineres brugeroprettelsesknappen, som aktiverer handleSubmit igennem onPress\n    const renderButton = () => {\n        return <Button onSubmit={() => handleSubmit()} title=\"Login\" />;\n    };\n\n    /*\n  * Metoden herunder håndterer oprettelse af brugere ved at anvende den prædefinerede metode, som stilles til rådighed af firebase\n  * signInWithEmailAndPassword tager en mail og et password med som argumenter og foretager et asynkront kald, der eksekverer en brugeroprettelse i firebase\n  * Opstår der fejl under forsøget på oprettelse, vil der i catch blive fremsat en fejlbesked, som, ved brug af\n  * setErrorMessage, angiver værdien for state-variablen, errormessage\n  */\n\n    const handleSubmit = async() => {\n        try {\n            await firebase.auth().signInWithEmailAndPassword(email, password).then((data)=>{\n            });\n        } catch (error){\n            setErrorMessage(error.message)\n        }\n    }\n\n    //I return oprettes en tekstkomponent, der angiver at dette er SignUpfrom\n    //Dernæst er der to inputfelter, som løbeende sætter værdien af state-variablerne, mail og password.\n    // Afslutningsvis, angives det at, hvis errorMessage får fastsat en værdi, skal denne udskrives i en tekstkomponent.\n    return (\n        <View>\n            <Text style={styles.header}>Login</Text>\n            <TextInput\n                style={{borderWidth:1}}\n                placeholder=\"email\"\n                value={email}\n                onChangeText={(email) => setEmail(email)}\n                style={styles.inputField}\n            />\n            <TextInput\n                placeholder=\"password\"\n                value={password}\n                onChangeText={(password) => setPassword(password)}\n                secureTextEntry\n                style={styles.inputField}\n            />\n            {errorMessage && (\n                <Text style={styles.error}>Error: {errorMessage}</Text>\n            )}\n            {renderButton()}\n        </View>\n    );\n}\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    header: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: \"bold\",\n        fontSize: 40,\n    },\n    inputField: {\n        borderWidth: 1,\n        margin: 10,\n        padding: 10,\n    },\n});\n\n//Eksport af SignUpForm, således denne kan importeres og benyttes i andre komponenter\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}