{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kasperronbog/WebstormProjects/brugerinddragelse/components/AddFood.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport firebase from \"firebase\";\n\nvar AddFood = function AddFood(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var initialState = {\n    brand: '',\n    model: '',\n    year: '',\n    licensePlate: ''\n  };\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      newCar = _useState2[0],\n      setNewCar = _useState2[1];\n\n  var isEditCar = route.name === \"Edit Car\";\n  useEffect(function () {\n    if (isEditCar) {\n      var car = route.params.car[1];\n      setNewCar(car);\n    }\n\n    return function () {\n      setNewCar(initialState);\n    };\n  }, []);\n\n  var changeTextInput = function changeTextInput(name, event) {\n    setNewCar(_objectSpread(_objectSpread({}, newCar), {}, _defineProperty({}, name, event)));\n  };\n\n  var handleSave = function handleSave() {\n    var brand = newCar.brand,\n        model = newCar.model,\n        year = newCar.year,\n        licensePlate = newCar.licensePlate;\n\n    if (brand.length === 0 || model.length === 0 || year.length === 0 || licensePlate.length === 0) {\n      return Alert.alert('Et af felterne er tomme');\n    }\n\n    if (isEditCar) {\n      var id = route.params.car[0];\n\n      try {\n        firebase.database().ref(\"/Cars/\" + id).update({\n          brand: brand,\n          model: model,\n          year: year,\n          licensePlate: licensePlate\n        });\n        Alert.alert(\"Din info er nu opdateret\");\n        var car = [id, newCar];\n        navigation.navigate(\"Car Details\", {\n          car: car\n        });\n      } catch (error) {\n        console.log(\"Error: \" + error.message);\n      }\n    } else {\n      try {\n        firebase.database().ref('/Cars/').push({\n          brand: brand,\n          model: model,\n          year: year,\n          licensePlate: licensePlate\n        });\n        Alert.alert(\"Saved\");\n        setNewCar(initialState);\n      } catch (error) {\n        console.log(\"Error: \" + error.message);\n      }\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, Object.keys(initialState).map(function (key, index) {\n    return React.createElement(View, {\n      style: styles.row,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, key), React.createElement(TextInput, {\n      value: newCar[key],\n      onChangeText: function onChangeText(event) {\n        return changeTextInput(key, event);\n      },\n      style: styles.input,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }));\n  }), React.createElement(Button, {\n    title: isEditCar ? \"Save changes\" : \"Add car\",\n    onPress: function onPress() {\n      return handleSave();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default AddFood;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    height: 30,\n    margin: 10\n  },\n  label: {\n    fontWeight: 'bold',\n    width: 100\n  },\n  input: {\n    borderWidth: 1,\n    padding: 5,\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/kasperronbog/WebstormProjects/brugerinddragelse/components/AddFood.js"],"names":["React","useState","useEffect","firebase","AddFood","navigation","route","initialState","brand","model","year","licensePlate","newCar","setNewCar","isEditCar","name","car","params","changeTextInput","event","handleSave","length","Alert","alert","id","database","ref","update","navigate","error","console","log","message","push","styles","container","Object","keys","map","key","index","row","label","input","StyleSheet","create","flex","justifyContent","flexDirection","height","margin","fontWeight","width","borderWidth","padding"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport {\n    Button,\n    Text,\n    View,\n    TextInput,\n    Alert,\n    ActivityIndicator,\n    StyleSheet,\n    SafeAreaView,\n    ScrollView,\n} from 'react-native';\nimport firebase from \"firebase\";\n\nconst AddFood = ({navigation, route}) => {\n\n    const initialState = { brand: '', model: '', year: '', licensePlate: '' }\n\n    const [newCar, setNewCar] = useState(initialState);\n\n    /*Returnerer true, hvis vi er på edit car*/\n    const isEditCar = route.name === \"Edit Car\";\n\n    useEffect(() => {\n        if(isEditCar){\n            const car = route.params.car[1];\n            setNewCar(car)\n        }\n        /*Fjern data, når vi går væk fra screenen*/\n        return () => {\n            setNewCar(initialState)\n        };\n    }, []);\n\n    const changeTextInput = (name,event) => {\n        setNewCar({...newCar, [name]: event});\n    }\n\n    const handleSave = () =>{\n        const { brand, model, year, licensePlate } = newCar;\n\n        if(brand.length===0 || model.length===0 || year.length===0 || licensePlate.length===0){\n            return Alert.alert('Et af felterne er tomme');\n        }\n\n        if(isEditCar){\n            const id = route.params.car[0];\n            try {\n                firebase\n                    .database()\n                    .ref(`/Cars/${id}`)\n                    // Vi bruger update, så kun de felter vi angiver, bliver ændret\n                    .update({ brand, model, year, licensePlate });\n                // Når bilen er ændret, går vi tilbage.\n                Alert.alert(\"Din info er nu opdateret\");\n                const car = [id,newCar]\n                navigation.navigate(\"Car Details\",{car});\n            } catch (error) {\n                console.log(`Error: ${error.message}`);\n            }\n\n        }else{\n            try {\n                firebase\n                    .database()\n                    .ref('/Cars/')\n                    .push({ brand, model, year, licensePlate });\n                Alert.alert(`Saved`);\n                setNewCar(initialState)\n            } catch (error) {\n                console.log(`Error: ${error.message}`);\n            }\n        }\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <ScrollView>\n                {\n                    Object.keys(initialState).map((key,index) =>{\n                        return(\n                            <View style={styles.row} key={index}>\n                                <Text style={styles.label}>{key}</Text>\n                                <TextInput\n                                    value={newCar[key]}\n                                    onChangeText={(event) => changeTextInput(key,event)}\n                                    style={styles.input}\n                                />\n                            </View>\n                        )\n                    })\n                }\n                {/*Hvis vi er inde på edit car, vis save changes i stedet for add car*/}\n                <Button title={ isEditCar ? \"Save changes\" : \"Add car\"} onPress={() => handleSave()} />\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n\nexport default AddFood;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center'\n    },\n    row: {\n        flexDirection: 'row',\n        height: 30,\n        margin: 10,\n    },\n    label: {\n        fontWeight: 'bold',\n        width: 100\n    },\n    input: {\n        borderWidth: 1,\n        padding:5,\n        flex: 1\n    },\n});"]},"metadata":{},"sourceType":"module"}