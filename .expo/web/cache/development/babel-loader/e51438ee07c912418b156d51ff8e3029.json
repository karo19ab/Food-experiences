{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/kasperronbog/WebstormProjects/FoodieGemz/components/ProfileScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport firebase from 'firebase';\nimport { Card } from \"react-native-paper\";\nimport SignUpForm from \"./SignUpForm\";\nimport LoginForm from \"./LoginForm\";\n\nfunction ProfileScreen() {\n  var _useState = useState({\n    loggedIn: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  function onAuthStateChange(callback) {\n    return firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        callback({\n          loggedIn: true,\n          user: user\n        });\n      } else {\n        callback({\n          loggedIn: false\n        });\n      }\n    });\n  }\n\n  useEffect(function () {\n    var unsubscribe = onAuthStateChange(setUser);\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  var handleLogOut = function handleLogOut() {\n    return _regeneratorRuntime.async(function handleLogOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!firebase.auth().currentUser) {\n    return React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/profilePic.jpg\"),\n      style: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), React.createElement(Card, {\n      style: {\n        padding: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, React.createElement(SignUpForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    })), React.createElement(Card, {\n      style: {\n        padding: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, React.createElement(LoginForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    })), React.createElement(Text, {\n      style: styles.paragraph2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Jeg h\\xE5ber virkelig dette kan hj\\xE6lpe bare en smule!\"));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Current user: \", firebase.auth().currentUser.email), React.createElement(Button, {\n      onPress: function onPress() {\n        return handleLogOut();\n      },\n      title: \"Log out\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: '5%',\n    backgroundColor: '#FFFFFF',\n    padding: 8\n  },\n  image: {\n    marginHorizontal: \"10%\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    width: \"80%\",\n    height: \"25%\"\n  },\n  paragraph2: {\n    marginTop: '50%',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/kasperronbog/WebstormProjects/FoodieGemz/components/ProfileScreen.js"],"names":["React","useEffect","useState","firebase","Card","SignUpForm","LoginForm","ProfileScreen","loggedIn","user","setUser","onAuthStateChange","callback","auth","onAuthStateChanged","unsubscribe","handleLogOut","signOut","currentUser","require","styles","image","padding","paragraph2","container","email","StyleSheet","create","flex","justifyContent","paddingTop","backgroundColor","marginHorizontal","marginTop","marginBottom","width","height","fontSize","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {View, Text, Button, StyleSheet, Image, ScrollView} from 'react-native';\nimport firebase from 'firebase';\nimport {Card} from \"react-native-paper\";\nimport SignUpForm from \"./SignUpForm\";\nimport LoginForm from \"./LoginForm\";\n\n\nfunction ProfileScreen () {\n\n    //Her oprettes bruger state variblen\n    const [user, setUser] = useState({loggedIn: false});\n\n    //onAuthstatechanged er en prædefineret metode, forsynet af firebase, som konstant observerer brugerens status (logget ind vs logget ud)\n    //Pba. brugerens status foretages et callback i form af setUSer metoden, som håndterer user-state variablens status.\n    function onAuthStateChange(callback) {\n        return firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                callback({loggedIn: true, user: user});\n            } else {\n                callback({loggedIn: false});\n            }\n        });\n    }\n\n    //Heri aktiverer vi vores listener i form af onAuthStateChanged, så vi dynamisk observerer om brugeren er aktiv eller ej.\n    useEffect(() => {\n        const unsubscribe = onAuthStateChange(setUser);\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n    //handleLogout håndterer log ud af en aktiv bruger.\n    //Metoden er en prædefineret metode, som firebase stiller tilrådighed\n    //Metoden er et asynkrontkald.\n    const handleLogOut = async () => {\n        await firebase.auth().signOut();\n    };\n\n    //Hvis der af en eller anden grund ikke skulle være muligt at fremfinde den aktive bruger,\n    //skal der udprintes en besked om dette igennem en tekstkomponent\n    if (!firebase.auth().currentUser) {\n        return (\n                <ScrollView>\n                    <Image\n                        source={require('../assets/profilePic.jpg')}\n                        style={styles.image}/>\n\n                    <Card style={{padding:20}}>\n                        <SignUpForm />\n                    </Card>\n\n                    <Card style={{padding:20}}>\n                        <LoginForm />\n                    </Card>\n                    <Text style={styles.paragraph2}>\n                        Jeg håber virkelig dette kan hjælpe bare en smule!\n                    </Text>\n                </ScrollView>\n        )\n    }else{\n        //I return() udnyttes en prædefineret metode, som firebase stiller til rådighed.\n        // Metoden returnerer mailadressen af den aktive bruger.\n        // Mailadressen udskrives ved brug af en tekstkomponent.\n        return (\n            <View style={styles.container} >\n                <Text>Current user: {firebase.auth().currentUser.email}</Text>\n                <Button onPress={() => handleLogOut()} title=\"Log out\" />\n            </View>\n        );\n    }\n}\n\n//Lokal styling til brug i ProfileScreen\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        paddingTop: '5%',\n        backgroundColor: '#FFFFFF',\n        padding: 8,\n    },\n    image: {\n        marginHorizontal: \"10%\",\n        marginTop: \"5%\",\n        marginBottom: \"5%\",\n        width: \"80%\",\n        height: \"25%\",\n    },\n    paragraph2: {\n        marginTop: '50%',\n        fontSize: 18,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    }\n});\n\n//Eksport af Loginform, således denne kan importeres og benyttes i andre komponenter\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}