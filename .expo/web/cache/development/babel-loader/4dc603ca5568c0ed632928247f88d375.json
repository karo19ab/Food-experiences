{"ast":null,"code":"var _jsxFileName = \"/Users/kasperronbog/WebstormProjects/FoodieGemz/components/SearchPlaces.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\n\nfunction SearchPlaces() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(GooglePlacesAutocomplete, {\n    placeholder: \"Search\",\n    miniLenght: 2,\n    autoFocus: false,\n    fetchDetails: true,\n    renderDescription: function renderDescription(row) {\n      return row.description;\n    },\n    onPress: function onPress(data) {\n      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(data, details);\n    },\n    getDefaultValue: function getDefaultValue() {\n      return '';\n    },\n    query: {\n      key: 'AIzaSyCc8mR9JJqFV35qcL7WXn8nBvFPNGZ101w',\n      language: 'en',\n      types: \"establishment\"\n    },\n    styles: {\n      container: {\n        flex: 0,\n        position: \"absolute\",\n        width: \"100%\",\n        zIndex: 1\n      },\n      listView: {\n        backgroundColor: \"grey\"\n      }\n    },\n    currentLocation: true,\n    currentLocationLabel: \"Current Location\",\n    nearbyPlacesAPI: \"GooglePlacesSearch\",\n    GoogleReverseGeocodingQuery: {},\n    GooglePlacesSearchQuery: {\n      rankby: 'distance',\n      type: 'restaurant'\n    },\n    GooglePlacesDetailsQuery: {\n      fields: 'formatted_address'\n    },\n    debounce: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }));\n}\n\n;\nvar styles = StyleSheet.create({\n  container: {}\n});\nexport default SearchPlaces;","map":{"version":3,"sources":["/Users/kasperronbog/WebstormProjects/FoodieGemz/components/SearchPlaces.js"],"names":["React","useEffect","useState","GooglePlacesAutocomplete","SearchPlaces","styles","container","row","description","data","details","console","log","key","language","types","flex","position","width","zIndex","listView","backgroundColor","rankby","type","fields","StyleSheet","create"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;;;AAEA,SAAQC,wBAAR,QAAuC,yCAAvC;;AAIA,SAASC,YAAT,GAAyB;AACrB,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGC,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA,oBAAC,wBAAD;AACI,IAAA,WAAW,EAAC,QADhB;AAEI,IAAA,UAAU,EAAE,CAFhB;AAGI,IAAA,SAAS,EAAE,KAHf;AAII,IAAA,YAAY,EAAE,IAJlB;AAKI,IAAA,iBAAiB,EAAE,2BAAAC,GAAG;AAAA,aAAEA,GAAG,CAACC,WAAN;AAAA,KAL1B;AAOI,IAAA,OAAO,EAAE,iBAACC,IAAD,EAA0B;AAAA,UAAnBC,OAAmB,uEAAT,IAAS;AAE/BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAlB;AACH,KAVL;AAWI,IAAA,eAAe,EAAE;AAAA,aAAI,EAAJ;AAAA,KAXrB;AAYI,IAAA,KAAK,EAAE;AAEHG,MAAAA,GAAG,EAAE,yCAFF;AAGHC,MAAAA,QAAQ,EAAE,IAHP;AAIHC,MAAAA,KAAK,EAAE;AAJJ,KAZX;AAkBI,IAAA,MAAM,EAAE;AACJT,MAAAA,SAAS,EAAE;AAACU,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,QAAQ,EAAE,UAApB;AAAgCC,QAAAA,KAAK,EAAE,MAAvC;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OADP;AAEJC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB;AAFN,KAlBZ;AAsBI,IAAA,eAAe,EAAE,IAtBrB;AAuBI,IAAA,oBAAoB,EAAC,kBAvBzB;AAwBI,IAAA,eAAe,EAAC,oBAxBpB;AAyBI,IAAA,2BAA2B,EAAE,EAzBjC;AA4BI,IAAA,uBAAuB,EAAE;AACrBC,MAAAA,MAAM,EAAE,UADa;AAErBC,MAAAA,IAAI,EAAE;AAFe,KA5B7B;AAgCI,IAAA,wBAAwB,EAAE;AACtBC,MAAAA,MAAM,EAAE;AADc,KAhC9B;AAmCI,IAAA,QAAQ,EAAE,GAnCd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CADJ;AA6CE;;AAAA;AAGN,IAAMnB,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AAC7BpB,EAAAA,SAAS,EAAE;AADkB,CAAlB,CAAf;AAWA,eAAeF,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {View, Text, Button, StyleSheet, Image, SafeAreaView, ScrollView} from 'react-native';\nimport {GooglePlacesAutocomplete} from \"react-native-google-places-autocomplete\";\n\n\n\nfunction SearchPlaces () {\n    return (\n        <View style= {styles.container}>\n        {\n            // https://www.npmjs.com/package/react-native-google-places-autocomplete\n            // Video: https://www.youtube.com/watch?v=qlELLikT3FU&ab_channel=DarwinTech\n        }\n        <GooglePlacesAutocomplete\n            placeholder='Search'\n            miniLenght={2}\n            autoFocus={false}\n            fetchDetails={true}\n            renderDescription={row=>row.description}\n\n            onPress={(data, details = null) => {\n                // 'details' is provided when fetchDetails = true\n                console.log(data, details);\n            }}\n            getDefaultValue={()=>''}\n            query={{\n                // Husk at krypter API key, fordi ellers er den tilgÃ¦ngelig for alle!\n                key: 'AIzaSyCc8mR9JJqFV35qcL7WXn8nBvFPNGZ101w',\n                language: 'en', // Resultatets sprog\n                types: \"establishment\"\n            }}\n            styles={{\n                container: {flex: 0, position: \"absolute\", width: \"100%\", zIndex: 1},\n                listView: {backgroundColor: \"grey\"},\n            }}\n            currentLocation={true}\n            currentLocationLabel='Current Location'\n            nearbyPlacesAPI='GooglePlacesSearch'\n            GoogleReverseGeocodingQuery={{\n                // ved ikke helt hvad man bruger dette til\n            }}\n            GooglePlacesSearchQuery={{\n                rankby: 'distance',\n                type: 'restaurant'\n            }}\n            GooglePlacesDetailsQuery={{\n                fields: 'formatted_address'\n            }}\n            debounce={200} // devouncer req i ms. Sat til 0 for at fjerne debounce\n\n        />\n    </View>\n    )};\n\n//Lokal styling til brug i Map\nconst styles = StyleSheet.create({\n    container: {\n\n        //marginTop: 50\n        //justifyContent: 'center',\n        //paddingTop: Constants.statusBarHeight,\n        //backgroundColor: '#ecf0f1',\n        //padding: 8,\n    },\n})\n\nexport default SearchPlaces;"]},"metadata":{},"sourceType":"module"}